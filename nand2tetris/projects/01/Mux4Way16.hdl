// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
	
	Mux(a = a[0], b = b[0], sel = sel[0], out = Muxtempab0);
	Mux(a = c[0], b = d[0], sel = sel[0], out = Muxtempcd0);
	Mux(a = Muxtempab0, b = Muxtempcd0, sel = sel[1], out = out[0]);
	
	Mux(a = a[1], b = b[1], sel = sel[0], out = Muxtempab1);
	Mux(a = c[1], b = d[1], sel = sel[0], out = Muxtempcd1);
	Mux(a = Muxtempab1, b = Muxtempcd1, sel = sel[1], out = out[1]);
	
	Mux(a = a[2], b = b[2], sel = sel[0], out = Muxtempab2);
	Mux(a = c[2], b = d[2], sel = sel[0], out = Muxtempcd2);
	Mux(a = Muxtempab2, b = Muxtempcd2, sel = sel[1], out = out[2]);
	
	Mux(a = a[3], b = b[3], sel = sel[0], out = Muxtempab3);
	Mux(a = c[3], b = d[3], sel = sel[0], out = Muxtempcd3);
	Mux(a = Muxtempab3, b = Muxtempcd3, sel = sel[1], out = out[3]);
	
	Mux(a = a[4], b = b[4], sel = sel[0], out = Muxtempab4);
	Mux(a = c[4], b = d[4], sel = sel[0], out = Muxtempcd4);
	Mux(a = Muxtempab4, b = Muxtempcd4, sel = sel[1], out = out[4]);
	
	
	Mux(a = a[5], b = b[5], sel = sel[0], out = Muxtempab5);
	Mux(a = c[5], b = d[5], sel = sel[0], out = Muxtempcd5);
	Mux(a = Muxtempab5, b = Muxtempcd5, sel = sel[1], out = out[5]);
	
	
	Mux(a = a[6], b = b[6], sel = sel[0], out = Muxtempab6);
	Mux(a = c[6], b = d[6], sel = sel[0], out = Muxtempcd6);
	Mux(a = Muxtempab6, b = Muxtempcd6, sel = sel[1], out = out[6]);
	
	
	Mux(a = a[7], b = b[7], sel = sel[0], out = Muxtempab7);
	Mux(a = c[7], b = d[7], sel = sel[0], out = Muxtempcd7);
	Mux(a = Muxtempab7, b = Muxtempcd7, sel = sel[1], out = out[7]);
	
	Mux(a = a[8], b = b[8], sel = sel[0], out = Muxtempab8);
	Mux(a = c[8], b = d[8], sel = sel[0], out = Muxtempcd8);
	Mux(a = Muxtempab8, b = Muxtempcd8, sel = sel[1], out = out[8]);
	
	Mux(a = a[9], b = b[9], sel = sel[0], out = Muxtempab9);
	Mux(a = c[9], b = d[9], sel = sel[0], out = Muxtempcd9);
	Mux(a = Muxtempab9, b = Muxtempcd9, sel = sel[1], out = out[9]);
	
	Mux(a = a[10], b = b[10], sel = sel[0], out = Muxtempab10);
	Mux(a = c[10], b = d[10], sel = sel[0], out = Muxtempcd10);
	Mux(a = Muxtempab10, b = Muxtempcd10, sel = sel[1], out = out[10]);
	
	Mux(a = a[11], b = b[11], sel = sel[0], out = Muxtempab11);
	Mux(a = c[11], b = d[11], sel = sel[0], out = Muxtempcd11);
	Mux(a = Muxtempab11, b = Muxtempcd11, sel = sel[1], out = out[11]);
	
	Mux(a = a[12], b = b[12], sel = sel[0], out = Muxtempab12);
	Mux(a = c[12], b = d[12], sel = sel[0], out = Muxtempcd12);
	Mux(a = Muxtempab12, b = Muxtempcd12, sel = sel[1], out = out[12]);
	
	Mux(a = a[13], b = b[13], sel = sel[0], out = Muxtempab13);
	Mux(a = c[13], b = d[13], sel = sel[0], out = Muxtempcd13);
	Mux(a = Muxtempab13, b = Muxtempcd13, sel = sel[1], out = out[13]);
	
	Mux(a = a[14], b = b[14], sel = sel[0], out = Muxtempab14);
	Mux(a = c[14], b = d[14], sel = sel[0], out = Muxtempcd14);
	Mux(a = Muxtempab14, b = Muxtempcd14, sel = sel[1], out = out[14]);
	
	Mux(a = a[15], b = b[15], sel = sel[0], out = Muxtempab15);
	Mux(a = c[15], b = d[15], sel = sel[0], out = Muxtempcd15);
	Mux(a = Muxtempab15, b = Muxtempcd15, sel = sel[1], out = out[15]);
	

}